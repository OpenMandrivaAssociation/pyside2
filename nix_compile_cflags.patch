diff -up pyside-setup-opensource-src-5.15.12/sources/shiboken2/ApiExtractor/clangparser/compilersupport.cpp.4~ pyside-setup-opensource-src-5.15.12/sources/shiboken2/ApiExtractor/clangparser/compilersupport.cpp
--- pyside-setup-opensource-src-5.15.12/sources/shiboken2/ApiExtractor/clangparser/compilersupport.cpp.4~	2024-01-07 21:35:42.798421650 +0100
+++ pyside-setup-opensource-src-5.15.12/sources/shiboken2/ApiExtractor/clangparser/compilersupport.cpp	2024-01-07 21:37:53.419712029 +0100
@@ -345,14 +345,16 @@ QByteArrayList emulatedCompilerOptions()
     appendClangBuiltinIncludes(&headerPaths);
 #  endif // NEED_CLANG_BUILTIN_INCLUDES
 
-    // Append the c++ include paths since Clang is unable to find
-    // <type_traits> etc (g++ 11.3).
-    const HeaderPaths gppPaths = gppInternalIncludePaths(compilerFromCMake(QStringLiteral("g++")));
+    const HeaderPaths gppPaths = gppInternalIncludePaths(QStringLiteral("g++"));
     for (const HeaderPath &h : gppPaths) {
-        if (h.path.contains("c++")
-            || h.path.contains("sysroot")) { // centOS
+        // PySide2 requires that Qt headers are not -isystem
+        // https://bugreports.qt.io/browse/PYSIDE-787
+        if (!h.path.contains("-qt")) {
+            // add using -isystem
             headerPaths.append(h);
-        }
+        } else {
+            headerPaths.append({h.path, HeaderType::Standard});
+	}
     }
 #else
     HeaderPaths headerPaths;
